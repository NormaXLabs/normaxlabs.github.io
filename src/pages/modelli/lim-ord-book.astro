---
import Layout from '../../layouts/BaseLayout.astro';
---

<Layout title="Order Book">
  <section class="py-24 max-w-8xl">
    <div class="max-w-3xl mx-auto px-4 text-center">
      <h1 class="text-5xl font-extrabold mb-24 text-primary-600">
        Studio di Limit Order Book
      </h1>
    </div>
    <div class="max-w-6xl mx-auto px-4 text-left space-y-10">
      <h2 class="text-3xl font-bold mb-6 text-gray-600">
        Introduzione al limit order book
      </h2>

      <div id="lob-plot" class="w-full text-center h-[400px] mb-8 border-collapse"></div>

      <p>
        Il <strong>Limit Order Book</strong> (LOB) è il registro elettronico in cui, in tempo reale,
        vengono raccolti tutti gli ordini di acquisto e vendita (<em>limit orders</em>) di uno strumento finanziario.
        Viene suddiviso in due lati opposti:
      </p>

      <table class="w-full text-center mb-6 border-collapse">
        <thead>
          <tr class="border-b">
            <th class="py-2">Lato <em>Bid</em> (Acquisti)</th>
            <th class="py-2">Spread</th>
            <th class="py-2">Lato <em>Ask</em> (Vendite)</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="py-2">Volumi e prezzi ai vari livelli di acquisto</td>
            <td class="py-2 text-center">↔︎</td>
            <td class="py-2">Volumi e prezzi ai vari livelli di vendita</td>
          </tr>
        </tbody>
      </table>

      <ul class="list-disc list-inside space-y-2">
        <li><strong>Best bid</strong> / <strong>Best ask</strong>: prezzo più alto tra i buy limit orders e prezzo più basso tra i sell limit orders.</li>
        <li><strong>Spread</strong>: differenza tra best ask e best bid, indicativa del costo immediato di transazione.</li>
        <li><strong>Mid-price</strong>: punto medio tra bid e ask (<code>(best bid + best ask) / 2</code>).</li>
      </ul>

      <h3 class="text-2xl font-semibold mt-8">Struttura a Livelli</h3>
      <ol class="list-decimal list-inside space-y-2 mb-8">
        <li><strong>Livello 1</strong>: best bid / best ask.</li>
        <li><strong>Livello 2, 3,…</strong>: prezzi decrescenti sul lato bid e crescenti sul lato ask.</li>
        <li><strong>Profondità</strong> (<em>depth</em>): somma dei volumi entro una certa distanza dal mid-price (es. <code>Depth(10bps)</code>).</li>
      </ol>

      <h3 class="text-2xl font-semibold">Market Order</h3>
      <p>Un <em>Market Order</em> è un ordine da eseguire <strong>immediatamente</strong> al miglior prezzo disponibile:</p>
      <ul class="list-disc list-inside space-y-2 mb-8">
        <li><strong>Market Buy</strong>: acquista al prezzo del best ask.</li>
        <li><strong>Market Sell</strong>: vende al prezzo del best bid.</li>
      </ul>

      <h3 class="text-2xl font-semibold">Market Maker</h3>
      <ul class="list-disc list-inside space-y-2 mb-8">
        <li><strong>Obiettivo</strong>: guadagnare dallo spread tra bid e ask.</li>
        <li><strong>Strategia</strong>: piazzare ordini limit su entrambi i lati per mantenere liquidità.</li>
        <li><strong>Incentivi</strong>: riduzioni di commissioni o rimborsi sul volume in cambio di liquidità.</li>
      </ul>

      <p>
        Questa struttura permette di bilanciare domanda e offerta, determinando il prezzo di mercato
        e garantendo trasparenza ed efficienza.
      </p>

      <h2 class="text-3xl font-bold mt-20 mb-6 text-gray-600">
        Il Limit Order Book di un ETF poco liquido
      </h2>

      <p>
        Quando un ETF viene emesso, capita frequentemente che il suo <strong>Limit Order Book</strong> sia poco liquido.
        Questo fenomeno può essere causato da diversi fattori, tra cui la presenza di emittenti concorrenti più noti e consolidati, i cui ETF presentano LOB più profondi e attivi.
        Un altro elemento determinante è la natura dell'ETF stesso: strumenti troppo settoriali o di nicchia tendono a generare volumi più contenuti, risultando quindi meno attraenti per gli investitori istituzionali e i market maker.
      </p>

      <p>
        Un esempio emblematico è rappresentato dall’ETF <strong>PSCH</strong>, il <em>Invesco S&P SmallCap Health Care ETF</em>.
        Si tratta di un fondo che replica le performance delle piccole capitalizzazioni del settore sanitario statunitense.
        La combinazione tra la bassa capitalizzazione media dei titoli sottostanti e lo scarso interesse di massa verso questo segmento determina un LOB particolarmente fragile:
        spread ampi, profondità ridotta e alta sensibilità agli ordini di mercato.
      </p>

      <p>
        PSCH costituisce un caso di studio ideale per analisi quantitative e microstrutturali,
        in quanto permette di esplorare strategie finalizzate a migliorare la liquidità del book. Tra queste, si possono considerare simulazioni basate su modelli agent-based,
        implementazioni di market maker algoritmici (come il modello di Avellaneda-Stoikov) e valutazioni di impatto legate a incentivi strutturali offerti da exchange o emittenti.
      </p>

      <p>
        Quello che <strong>NormaX Labs</strong> è in grado di fare è generare dei simulatori calibrati sui dati reali dell'ETF considerato, capaci di riprodurre fedelmente le principali caratteristiche del relativo LOB. Grazie a questi strumenti, è possibile esplorare una varietà di scenari sperimentali, volti a identificare strategie efficaci per mitigare il problema della scarsa liquidità e degli spread elevati. Un esempio che verrà analizzato nel prosieguo è quello dell’introduzione di un market maker basato sul modello di Avellaneda-Stoikov: attraverso l’inserimento sistematico di quotazioni più competitive, questo agente algoritmico è in grado di generare un meccanismo di herding, ovvero un effetto di attrazione che porta gli altri operatori di mercato a posizionarsi in prossimità dello spread ridotto, migliorando così la qualità complessiva del book e favorendo una maggiore efficienza di mercato.
      </p>

      <p class="text-xl text-gray-500 mt-4">
      Analisi quantitativa e simulazioni su ETF a bassa liquidità
      </p>
      Come detto in precedenza un esempio emblematico di un ETF avente uno spread medio piuttosto elevato, circa 22 bps, è PSCH. 
     
      <div class="flex flex-col items-center mt-10 space-y-4">
      <img src="/img/MM/lob_animation.gif" alt="Animazione LOB ETF poco liquido" class="w-full max-w-4xl rounded-xl shadow-md" />
       <p class="text-lg text-gray-600 text-center max-w-2xl">
      L'animazione mostra l'evoluzione dinamica del Limit Order Book dell'ETF PSCH a bassa liquidità. Si notano ampie fluttuazioni dello spread e una scarsa profondità ai primi livelli, fenomeni tipici nei mercati poco presidiati da market maker. Lo studio di questi pattern consente di valutare l'efficacia di strategie automatizzate per il miglioramento della liquidità.
      </p>
      </div>
      
      A partire dai dati storici del Limit Order Book, è possibile ricavare una serie di informazioni fondamentali per comprendere la microstruttura del mercato e per calibrare un simulatore realistico. Il codice sottostante analizza l’intero dataset, calcolando metriche chiave che descrivono le caratteristiche dinamiche e strutturali dell’ETF considerato.

Tra gli aspetti più rilevanti che vengono estratti vi sono, ad esempio, lo spread medio e mediano — espressi anche in basis points per normalizzare rispetto al prezzo — la volatilità intraday annualizzata, il tick size stimato in base alla granularità del book, e la profondità media ai primi livelli del book sia sul lato bid che su quello ask. Vengono inoltre analizzati il numero totale di esecuzioni, le dimensioni medie degli scambi, la frequenza di arrivo dei diversi tipi di ordine (limit, market, cancellazioni), la distanza tipica degli ordini limite rispetto al miglior prezzo, e la durata media degli ordini prima della cancellazione.

Tutte queste informazioni permettono di costruire un simulatore calibrato che riproduce fedelmente le dinamiche osservate nei dati reali. Il comportamento degli agenti, le probabilità di cancellazione, la struttura dello spread e la distribuzione delle size possono essere così modellati in modo accurato. In basso sono riportate due visualizzazioni esemplificative: la distribuzione dello spread osservato e l’evoluzione dello spread nel tempo per ciascuna sessione analizzata.

      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-12">
      <!-- Prima immagine -->
      <div class="flex flex-col items-center text-center">
        <img src="/img/MM/Dist_Spread.png" alt="Descrizione immagine 1" class="rounded-lg shadow-md max-w-full h-auto" />
      <p class="mt-4 text-gray-600 text-base max-w-md">
        <strong>Figura 1.</strong> LOB prima dell’introduzione del market maker. Si nota uno spread elevato e una bassa profondità ai primi livelli.
      </p>
      </div>

      <!-- Seconda immagine -->
      <div class="flex flex-col items-center text-center">
        <img src="/img/MM/Spread_PerSessione.png" alt="Descrizione immagine 2" class="rounded-lg shadow-md max-w-full h-auto" />
        <p class="mt-4 text-gray-600 text-base max-w-md">
          <strong>Figura 2.</strong> LOB dopo l’introduzione del market maker. Lo spread si riduce e aumentano i volumi vicino al mid-price.
        </p>
        </div>
      </div>



    </div>

    <!-- D3 plot remains unchanged -->
    <script src="https://cdn.jsdelivr.net/npm/d3@7/dist/d3.min.js" client:load></script>
    <script is:inline client:load>
      document.addEventListener('DOMContentLoaded', () => {
        const data = {
          bid: [
            { price: 100.5, volume: 150 },
            { price: 100.6, volume: 175 },
            { price: 100.7, volume: 200 },
            { price: 100.8, volume: 250 }
          ],
          ask: [
            { price: 100.9, volume: 100 },
            { price: 101.0, volume: 125 },
            { price: 101.1, volume: 150 },
            { price: 101.2, volume: 80 }
          ]
        };
        const container = document.getElementById('lob-plot');
        const margin = { top: 10, right: 0, bottom: 60, left: 80 };
        const width = container.clientWidth - margin.left - margin.right;
        const height = container.clientHeight - margin.top - margin.bottom;

        const svg = d3.select(container)
          .append('svg')
          .attr('width', width + margin.left + margin.right)
          .attr('height', height + margin.top + margin.bottom)
          .append('g')
          .attr('transform', `translate(${margin.left},${margin.top})`);

        const prices = [...data.bid.map(d => d.price), ...data.ask.map(d => d.price)];
        const x = d3.scaleBand()
          .domain(prices.map(p => p.toFixed(1)))
          .range([0, width])
          .padding(0.2);

        const y = d3.scaleLinear()
          .domain([0, d3.max([...data.bid, ...data.ask], d => d.volume)]).nice()
          .range([height, 0]);

        svg.append('g')
          .attr('transform', `translate(0,${height})`)
          .call(d3.axisBottom(x).tickFormat(d => d))
          .selectAll('text')
            .style('font-size', '18px')
            .style('fill', '#333');

        svg.append('g')
          .attr('class', 'y-axis')
          .call(d3.axisLeft(y).tickFormat(d => d))
          .selectAll('text')
            .style('font-size', '18px')
            .style('fill', '#333');

        svg.append('text')
          .attr('transform', 'rotate(-90)')
          .attr('x', -height / 2)
          .attr('y', -margin.left + 25)
          .attr('text-anchor', 'middle')
          .style('font-size', '28px')
          .text('Volume');

        svg.append('text')
          .attr('x', width / 2)
          .attr('y', height + margin.bottom - 10)
          .attr('text-anchor', 'middle')
          .style('font-size', '28px')
          .text('Prezzo');

        svg.selectAll('.bar.bid')
          .data(data.bid)
          .enter().append('rect')
          .attr('class', 'bar bid')
          .attr('x', d => x(d.price.toFixed(1)))
          .attr('y', d => y(d.volume))
          .attr('width', x.bandwidth() / 2)
          .attr('height', d => height - y(d.volume))
          .style('fill', 'steelblue');

        svg.selectAll('.bar.ask')
          .data(data.ask)
          .enter().append('rect')
          .attr('class', 'bar ask')
          .attr('x', d => x(d.price.toFixed(1)) + x.bandwidth() / 2)
          .attr('y', d => y(d.volume))
          .attr('width', x.bandwidth() / 2)
          .attr('height', d => height - y(d.volume))
          .style('fill', 'orange');

        const legend = svg.append('g')
          .attr('transform', `translate(${width - 100}, 0)`);
        legend.append('rect').attr('x', 0).attr('y', -10).attr('width', 24).attr('height', 24).style('fill', 'steelblue');
        legend.append('text').attr('x', 24).attr('y', 10).text('Bid').attr('font-size', '24px');
        legend.append('rect').attr('x', 0).attr('y', 20).attr('width', 24).attr('height', 24).style('fill', 'orange');
        legend.append('text').attr('x', 24).attr('y', 40).text('Ask').attr('font-size', '24px');
      });
    </script>
  </section>
</Layout>
