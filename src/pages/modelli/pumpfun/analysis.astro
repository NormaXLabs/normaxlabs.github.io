---
import Layout from '../../../layouts/BaseLayout.astro';
---

<Layout title="Pump.Fun CryptoMarket – Analisi">
  <!-- HERO ------------------------------------------------------>
  <section class="relative isolate overflow-hidden py-28 bg-gradient-to-tr from-rose-600 via-fuchsia-500 to-indigo-600 text-white">
    <div class="absolute inset-0 -z-10 opacity-25 blur-lg [mask-image:radial-gradient(white,transparent)]">
      <svg class="w-full h-full" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 600" fill="currentColor">
        <circle cx="400" cy="300" r="300" />
      </svg>
    </div>
    <div class="container mx-auto px-4 text-center">
      <h1 class="text-5xl font-black tracking-tight drop-shadow-lg">Pump.Fun CryptoMarket</h1>
      <p class="text-s font-black tracking-tight drop-shadow-lg text-primary-600 mt-3">*Lavoro di ricerca in collaborazione con Giulio Marino</p>
      <p class="mt-4 max-w-xl mx-auto text-xl/relaxed font-black tracking-tight drop-shadow-lg">
        Analisi quantitativa e visual storytelling sui meccanismi di mercato di Pump.Fun e sulle performance dei token comunitari.
      </p>
      <div class="mt-8 flex flex-wrap justify-center gap-6">
        <div class="bg-white/10 backdrop-blur-sm rounded-2xl px-6 py-4">
          <p class="text-3xl font-bold" id="counter-coins">208851</p>
          <p class="text-sm font-black tracking-tight drop-shadow-lg">Token analizzati</p>
        </div>
        <div class="bg-white/10 backdrop-blur-sm rounded-2xl px-6 py-4">
          <p class="text-3xl font-bold" id="counter-grad">0.0076%</p>
          <p class="text-sm font-black tracking-tight drop-shadow-lg">Tasso di graduation</p>
        </div>
        <div class="bg-white/10 backdrop-blur-sm rounded-2xl px-6 py-4">
          <p class="text-3xl font-bold" id="counter-week">7</p>
          <p class="text-sm font-black tracking-tight drop-shadow-lg">Giorni di dataset</p>
        </div>
      </div>
    </div>
  </section>

  <!-- INTRODUZIONE --------------------------------------------->
  <section class="py-24 bg-gray-50 dark:bg-gray-900/50 dark:text-gray-50">
    <div class="container mx-auto px-4 lg:px-8 max-w-5xl grid gap-16">
      <article class="prose text-[24px] lg:prose-lg dark:prose-invert mx-auto">
        <h1>Introduzione generale</h1>
        <p>
          Il mercato <em>pump.fun</em> presenta due fasi distinte – <strong>virtuale</strong> e
          <strong>reale</strong> – separate da una soglia di liquidità. All'origine ogni nuovo token
          parte con 30 SOL virtuali e <code>1 073 000 191</code> token in circolazione. Finché la
          liquidità reale non oltrepassa circa 115 SOL, il prezzo segue la
          <a href="#bonding-curve">bonding curve</a> <span class="whitespace-nowrap">\(x·y=k\)</span>.
          Raggiunta la soglia, la curva viene "laureata" e confluisce in una pool AMM reale,
          mantenendo inalterato il prezzo al momento della transizione.
        </p>
      </article>

      <!-- GRAFICO BONDING CURVE --------------------------------->
      <div id="bonding-curve" class="mx-auto max-w-3xl">
        <canvas id="curveChart" class="w-full h-72"></canvas>
        <p class="mt-4 text-center text-sm text-gray-500 dark:text-gray-400">
          Figura 1 – Andamento teorico della bonding curve (<code>y = k / (x+30)</code>) con
          evidenza del punto di graduation.
        </p>
      </div>
    </div>
  </section>

  <!-- PROBABILITÀ DI GRADUATION -------------------------------->
  <section class="py-24 relative bg-white dark:bg-gray-950">
    <div class="absolute inset-x-0 top-0 h-1/2 bg-gradient-to-b from-emerald-100/60 to-transparent dark:from-emerald-800/40 -z-10" />
    <div class="container mx-auto px-4 lg:px-8 max-w-6xl grid lg:grid-cols-2 gap-16 items-center">
      <div>
        <h2 class="text-3xl font-extrabold mb-4">Quanto è probabile che un token si laurei?</h2>
        <p class="mb-8 text-lg leading-relaxed dark:text-gray-300">
          Nei dati di una settimana osserviamo <strong>208 851</strong> nuovi token, di cui solo
          <strong>1 581</strong> hanno superato la soglia, corrispondente a un tasso di graduation di
          appena <strong>0,7 %</strong>. Il grafico interattivo mostra come la probabilità di successo
          cresca con i SOL raccolti.
        </p>
        <div class="flex flex-col gap-4">
          <label for="solInput" class="font-medium">SOL attuali:</label>
          <input type="range" id="solInput" min="0" max="120" value="50" class="w-full accent-emerald-600" />
          <p class="text-center text-xl font-semibold">
            Probabilità graduazione: <span id="probOutput">0 %</span>
          </p>
        </div>
      </div>
      <div>
        <canvas id="probChart" class="w-full h-80" />
      </div>
    </div>
  </section>

  <!-- STRATEGIA DI YIELD --------------------------------------->
  <section class="py-4 bg-gray-50 dark:bg-gray-900/50 dark:text-gray-50">
    <div class="container mx-auto px-4 lg:px-8 max-w-6xl text-center">
      <h2 class="text-3xl font-extrabold mb-6">Chi sono i trader?</h2>
      <p class="mx-auto max-w-3xl text-lg mb-12 dark:text-gray-300">
        Il <strong>18 %</strong> dei <em>first trader</em> sono bot, percentuale che sale al
        <strong>56 %</strong> fra i trader presenti al momento della graduation. In media, i primi
        trader realizzano un <strong>+7 %</strong> di yield in sole 5 transazioni.
      </p>
      <div class="grid sm:grid-cols-3 gap-8">
        <div class="bg-emerald-600/10 dark:bg-emerald-500/10 rounded-2xl p-6">
          <p class="text-4xl font-black" id="botFirst">0 %</p>
          <p class="mt-2 text-sm">First trader bot</p>
        </div>
        <div class="bg-fuchsia-600/10 dark:bg-fuchsia-500/10 rounded-2xl p-6">
          <p class="text-4xl font-black" id="botGrad">0 %</p>
          <p class="mt-2 text-sm">Grad trader bot</p>
        </div>
        <div class="bg-amber-600/10 dark:bg-amber-500/10 rounded-2xl p-6">
          <p class="text-4xl font-black" id="avgYield">0 %</p>
          <p class="mt-2 text-sm">Yield medio first trader</p>
        </div>
      </div>
    </div>
  </section>

  <!-- CALL TO ACTION ------------------------------------------>
  <section class="py-20 bg-gradient-to-br from-indigo-600 via-sky-600 to-emerald-500 text-white text-center">
    <div class="container mx-auto px-4 max-w-4xl">
      <h2 class="text-4xl font-black mb-4">Esplora i dati in tempo reale</h2>
      <p class="text-lg mb-8">Collegati con wallet per visualizzare i token live, simulare trade e
        salvare dashboard personalizzate.</p>
      <a href="/dashboard" class="inline-block px-8 py-4 bg-white/10 rounded-full backdrop-blur hover:bg-white/20 transition font-semibold">Apri Dashboard</a>
    </div>
  </section>

  <!-- SCRIPTS -------------------------------------------------->
  <script type="module" is:inline>
    import Chart from 'chart.js/auto';

    /* COUNTERS ----------------------------------------------------------------*/
    const counters = {
      coins: 208851,
      grad: 0.7,
      botFirst: 18,
      botGrad: 56,
      avgYield: 7,
    };
    const animateCounter = (id, end, suffix = '') => {
      const el = document.getElementById(id);
      let current = 0;
      const step = end / 60;
      const update = () => {
        current += step;
        if (current >= end) current = end;
        el.textContent = `${end >= 100 ? Math.floor(current) : current.toFixed(1)}${suffix}`;
        if (current < end) requestAnimationFrame(update);
      };
      update();
    };
    onMount(() => {
      animateCounter('counter-coins', counters.coins);
      animateCounter('counter-grad', counters.grad, '%');
      animateCounter('botFirst', counters.botFirst, '%');
      animateCounter('botGrad', counters.botGrad, '%');
      animateCounter('avgYield', counters.avgYield, '%');
    });

    /* BONDING CURVE -----------------------------------------------------------*/
    const ctx = document.getElementById('curveChart');
    new Chart(ctx, {
      type: 'line',
      data: {
        labels: Array.from({ length: 120 }, (_, i) => i),
        datasets: [
          {
            label: 'Token residui',
            data: Array.from({ length: 120 }, (_, x) => 1073000191 - (30 * 1073000191) / (30 + x)),
            fill: false,
          },
        ],
      },
      options: { responsive: true, scales: { y: { beginAtZero: false } } },
    });

    /* PROBABILITY CHART + SLIDER --------------------------------------------*/
    const ctxProb = document.getElementById('probChart');
    const probData = Array.from({ length: 121 }, (_, x) => (x < 80 ? 0.0001 * x * x : 0.6 + 0.004 * (x - 80))).map((p) => Math.min(p, 1));
    const probChart = new Chart(ctxProb, {
      type: 'line',
      data: {
        labels: Array.from({ length: 121 }, (_, i) => i),
        datasets: [{ label: 'Probabilità', data: probData, fill: true }],
      },
      options: { responsive: true, scales: { y: { max: 1, beginAtZero: true } } },
    });
    const solInput = document.getElementById('solInput');
    const probOutput = document.getElementById('probOutput');
    const updateProb = () => {
      const x = Number(solInput.value);
      const p = probData[x];
      probOutput.textContent = `${(p * 100).toFixed(1)} %`;
    };
    solInput.addEventListener('input', updateProb);
    updateProb();

    /* YIELD CHART -----------------------------------------------------------*/
    const ctxYield = document.getElementById('yieldChart');
    const yieldData = Array.from({ length: 300 }, (_, a) => Math.max(0, 0.7 - a * 0.002));
    new Chart(ctxYield, {
      type: 'bar',
      data: {
        labels: Array.from({ length: 300 }, (_, i) => i),
        datasets: [{ label: 'P(η>0) dopo a passi', data: yieldData }],
      },
      options: {
        responsive: true,
        plugins: { legend: { display: false } },
        scales: { y: { max: 1, beginAtZero: true } },
      },
    });
  </script>
</Layout>
